---
version: '3.9'
services:
  zookeeper-ks:
    image: confluentinc/cp-zookeeper:7.1.0
    hostname: zookeeper-ks
    container_name: zookeeper-ks
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker-ks:
    image: confluentinc/cp-kafka:7.1.0
    hostname: broker-ks
    container_name: broker-ks
    depends_on:
      - zookeeper-ks
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-ks:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-ks:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost

  schema-registry-ks:
    image: confluentinc/cp-schema-registry:7.1.0
    hostname: schema-registry-ks
    container_name: schema-registry-ks
    depends_on:
      - broker-ks
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-ks
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker-ks:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  connect-ks:
    image: cnfldemos/kafka-connect-datagen:0.5.3-7.1.0
    hostname: connect-ks
    container_name: connect-ks
    depends_on:
      - broker-ks
      - schema-registry-ks
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker-ks:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect-ks
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry-ks:8081
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR

#  ksqldb-server-ks:
#    image: confluentinc/cp-ksqldb-server:7.1.0
#    hostname: ksqldb-server-ks
#    container_name: ksqldb-server-ks
#    depends_on:
#      - broker-ks
#      - connect-ks
#    ports:
#      - "8088:8088"
#    environment:
#      KSQL_CONFIG_DIR: "/etc/ksql"
#      KSQL_BOOTSTRAP_SERVERS: "broker-ks:29092"
#      KSQL_HOST_NAME: ksqldb-server-ks
#      KSQL_LISTENERS: "http://0.0.0.0:8088"
#      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
#      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry-ks:8081"
#      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
#      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
#      KSQL_KSQL_CONNECT_URL: "http://connect-ks:8083"
#      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
#      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
#      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'
#
#  ksqldb-cli-ks:
#    image: confluentinc/cp-ksqldb-cli:7.1.0
#    container_name: ksqldb-cli-ks
#    depends_on:
#      - broker-ks
#      - connect-ks
#      - ksqldb-server-ks
#    entrypoint: /bin/sh
#    tty: true
#
#  ksql-datagen-ks:
#    image: confluentinc/ksqldb-examples:7.1.0
#    hostname: ksql-datagen-ks
#    container_name: ksql-datagen-ks
#    depends_on:
#      - ksqldb-server-ks
#      - broker-ks
#      - schema-registry-ks
#      - connect-ks
#    command: "bash -c 'echo Waiting for Kafka to be ready... && \
#                       cub kafka-ready -b broker-ks:29092 1 40 && \
#                       echo Waiting for Confluent Schema Registry to be ready... && \
#                       cub sr-ready schema-registry-ks 8081 40 && \
#                       echo Waiting a few seconds for topic creation to finish... && \
#                       sleep 11 && \
#                       tail -f /dev/null'"
#    environment:
#      KSQL_CONFIG_DIR: "/etc/ksql"
#      STREAMS_BOOTSTRAP_SERVERS: broker-ks:29092
#      STREAMS_SCHEMA_REGISTRY_HOST: schema-registry-ks
#      STREAMS_SCHEMA_REGISTRY_PORT: 8081
#
#  rest-proxy-ks:
#    image: confluentinc/cp-kafka-rest:7.1.0
#    depends_on:
#      - broker-ks
#      - schema-registry-ks
#    ports:
#      - 8082:8082
#    hostname: rest-proxy-ks
#    container_name: rest-proxy-ks
#    environment:
#      KAFKA_REST_HOST_NAME: rest-proxy-ks
#      KAFKA_REST_BOOTSTRAP_SERVERS: 'broker-ks:29092'
#      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
#      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry-ks:8081'